[build-system]
requires = ["wheel", "setuptools", "attrs>=17.1"]
build-backend = "setuptools.build_meta"

[project]
name = "pyatmo"
description = "Simple API to access Netatmo weather station data from any Python 3 script. Designed for Home Assistant (but not only)"
dynamic = ["version"]
readme = "README.md"
authors = [{ name = "Hugo Dupras", email = "jabesq@gmail.com" }]
maintainers = [{ name = "Tobias Sauerwein", email = "cgtobi@gmail.com" }]
requires-python = ">=3.11,<3.13"
dependencies = [
    "aiohttp>=3.7.4,<4.0.0",
    "oauthlib~=3.1",
    "requests~=2.24",
    "requests-oauthlib>=1.3,<3.0",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Home Automation",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

[project.urls]
Homepage = "https://github.com/jabesq-org/pyatmo"
Repository = "https://github.com/jabesq-org/pyatmo.git"
Issues = "https://github.com/jabesq-org/pyatmo/issues"
Changelog = "https://github.com/jabesq-org/pyatmo/blob/development/CHANGELOG.md"

[tool.uv]
dev-dependencies = [
    "black==24.8.0",
    "pre-commit==3.8.0",
    "ruff==0.6.4",
    "codespell==2.3.0",
    "pytest==8.3.3",
    "pytest-asyncio==0.24.0",
    "pytest-cov==5.0.0",
    "docutils==0.21.2",
    "time-machine==2.15.0",
    "mypy==1.11.2",
    "pytest-mock==3.14.0",
    "requests-mock==1.12.1",
    "tox==4.18.1",
    "twine==5.1.1",
]

[tool.setuptools_scm]
local_scheme = "no-local-version"
tag_regex = "^(?P<prefix>v)?(?P<version>[^\\+]+)(?P<suffix>.*)?$"
write_to = "src/pyatmo/__version__.py"
write_to_template = '''"""
Pyatmo: Simple API to access Netatmo devices and data

DO NO EDIT THIS FILE - VERSION IS MANAGED BY SETUPTOOLS_SCM
"""
__version__ = "{version}"
'''

[tool.pytest.ini_options]
minversion = "8.0"
asyncio_mode = "auto"

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
fix = true
line-length = 88

[tool.ruff.lint]
select = [
    "B002",    # Python does not support the unary prefix increment
    "B007",    # Loop control variable {name} not used within loop body
    "B014",    # Exception handler with duplicate exception
    "B023",    # Function definition does not bind loop variable {name}
    "B026",    # Star-arg unpacking after a keyword argument is strongly discouraged
    "C",       # complexity
    "COM818",  # Trailing comma on bare tuple prohibited
    "D",       # docstrings
    "DTZ003",  # Use datetime.now(tz=) instead of datetime.utcnow()
    "DTZ004",  # Use datetime.fromtimestamp(ts, tz=) instead of datetime.utcfromtimestamp(ts)
    "E",       # pycodestyle
    "F",       # pyflakes/autoflake
    "G",       # flake8-logging-format
    "I",       # isort
    "ICN001",  # import concentions; {name} should be imported as {asname}
    "N804",    # First argument of a class method should be named cls
    "N805",    # First argument of a method should be named self
    "N815",    # Variable {name} in class scope should not be mixedCase
    "S307",    # No builtin eval() allowed
    "PGH004",  # Use specific rule codes when using noqa
    "PLC0414", # Useless import alias. Import alias does not rename original package.
    "PL",      # pylint
    "Q000",    # Double quotes found but single quotes preferred
    "RUF006",  # Store a reference to the return value of asyncio.create_task
    "S102",    # Use of exec detected
    "S103",    # bad-file-permissions
    "S108",    # hardcoded-temp-file
    "S306",    # suspicious-mktemp-usage
    "S307",    # suspicious-eval-usage
    "S313",    # suspicious-xmlc-element-tree-usage
    "S314",    # suspicious-xml-element-tree-usage
    "S315",    # suspicious-xml-expat-reader-usage
    "S316",    # suspicious-xml-expat-builder-usage
    "S317",    # suspicious-xml-sax-usage
    "S318",    # suspicious-xml-mini-dom-usage
    "S319",    # suspicious-xml-pull-dom-usage
    "S320",    # suspicious-xmle-tree-usage
    "S601",    # paramiko-call
    "S602",    # subprocess-popen-with-shell-equals-true
    "S604",    # call-with-shell-equals-true
    "S608",    # hardcoded-sql-expression
    "S609",    # unix-command-wildcard-injection
    "SIM105",  # Use contextlib.suppress({exception}) instead of try-except-pass
    "SIM117",  # Merge with-statements that use the same scope
    "SIM118",  # Use {key} in {dict} instead of {key} in {dict}.keys()
    "SIM201",  # Use {left} != {right} instead of not {left} == {right}
    "SIM208",  # Use {expr} instead of not (not {expr})
    "SIM212",  # Use {a} if {a} else {b} instead of {b} if not {a} else {a}
    "SIM300",  # Yoda conditions. Use 'age == 42' instead of '42 == age'.
    "SIM401",  # Use get from dict with default instead of an if block
    "T100",    # Trace found: {name} used
    "T20",     # flake8-print
    "TID251",  # Banned imports
    "TRY004",  # Prefer TypeError exception for invalid type
    "B904",    # Use raise from to specify exception cause
    "TRY302",  # Remove exception handler; error is immediately re-raised
    "UP",      # pyupgrade
    "W",       # pycodestyle
]

ignore = [
    "D202", # No blank lines allowed after function docstring
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "D406", # Section name should end with a newline
    "D407", # Section name underlining
    "E501", # line too long
    "E731", # do not assign a lambda expression, use a def
    # False positives https://github.com/astral-sh/ruff/issues/5386
    "PLC0208", # Use a sequence type instead of a `set` when iterating over values
    "PLR0911", # Too many return statements ({returns} > {max_returns})
    "PLR0912", # Too many branches ({branches} > {max_branches})
    "PLR0913", # Too many arguments to function call ({c_args} > {max_args})
    "PLR0915", # Too many statements ({statements} > {max_statements})
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "PLW2901", # Outer {outer_kind} variable {name} overwritten by inner {inner_kind} target
    "UP006",   # keep type annotation style as is
    "UP007",   # keep type annotation style as is
    # Ignored due to performance: https://github.com/charliermarsh/ruff/issues/2923
    "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"pytz".msg = "use zoneinfo instead"

[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
# Allow for main entry & scripts to write to stdout
"src/pyatmo/__main__.py" = ["T201"]

# Exceptions for tests
"tests/*" = ["D10"]

[tool.ruff.lint.mccabe]
max-complexity = 25
